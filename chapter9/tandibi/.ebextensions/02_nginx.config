files:
  "/etc/nginx/conf.d/02_nginx.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # The content of this file is based on the content
      # of /etc/nginx/conf.d/webapp_healthd.conf

      # Change the name of the upstream because it can't have
      # the same name as the one defined by default in
      # /etc/nginx/conf.d/webapp_healthd.conf
      upstream new_upstream_name {
        server unix:///var/run/puma/my_app.sock;
      }

      # Change the name of the log_format because it can't have
      # the same name as the one defined by default in
      # /etc/nginx/conf.d/webapp_healthd.conf
      log_format new_log_name_healthd '$msec"$uri"'
        '$status"$request_time"$upstream_response_time"'
        '$http_x_forwarded_for';

      server {
        listen 80;
        server_name _ localhost;
        client_max_body_size 200M;

        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
          set $year $1;
          set $month $2;
          set $day $3;
          set $hour $4;
        }

        access_log  /var/log/nginx/access.log  main;
        access_log
          /var/log/nginx/healthd/application.log.$year-$month-$day-$hour
          new_log_name_healthd;

        location / {
          # Match the name of upstream directive which is defined above
          proxy_pass http://new_upstream_name;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-Proto
            $http_x_forwarded_proto;
          proxy_set_header X-Forwarded-For
            $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

          add_header Cache-Control no-store;
        }

        set $gzipable 'text/css image/svg+xml';
        set $gzipable '${gzipable} text/javascript application/javascript';

        location /assets {
          alias /var/app/current/public/assets;
          gzip on;
          gzip_vary on;
          gzip_min_length 10240;
          gzip_proxied expired no-cache no-store private auth;
          gzip_types $gzipable;
          gzip_disable "MSIE [1-6]\.";
          expires max;
          add_header Cache-Control public;
        }

        location /public {
          alias /var/app/current/public;
          gzip on;
          gzip_vary on;
          gzip_min_length 10240;
          gzip_proxied expired no-cache no-store private auth;
          gzip_types $gzipable;
          gzip_disable "MSIE [1-6]\.";
          expires max;
          add_header Cache-Control public;
        }

        location /packs {
          alias /var/app/current/public/packs;
          gzip on;
          gzip_vary on;
          gzip_min_length 10240;
          gzip_proxied expired no-cache no-store private auth;
          gzip_types $gzipable;
          gzip_disable "MSIE [1-6]\.";
          expires max;
          add_header Cache-Control public;
        }

      }

container_commands:
  01_reload_nginx:
    command: "sudo service nginx reload"
