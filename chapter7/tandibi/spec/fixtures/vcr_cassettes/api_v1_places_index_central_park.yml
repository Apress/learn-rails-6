---
http_interactions:
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=YOUR+KEY&language=en&location=40.785091%2C-73.968285&query=Central+Park&radius=2000
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
  response:
    status:
      code: 200
      message: OK
    headers:
      content-type:
      - application/json; charset=UTF-8
      date:
      - Thu, 16 Apr 2020 22:08:26 GMT
      expires:
      - Thu, 16 Apr 2020 22:13:26 GMT
      server:
      - scaffolding on HTTPServer2
      content-length:
      - '5055'
      x-xss-protection:
      - '0'
      x-frame-options:
      - SAMEORIGIN
      server-timing:
      - gfet4t7; dur=536
      cache-control:
      - public, max-age=300
      age:
      - '44'
      alt-svc:
      - quic=":443"; ma=2592000; v="46,43",h3-Q050=":443"; ma=2592000,h3-Q049=":443";
        ma=2592000,h3-Q048=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443";
        ma=2592000,h3-T050=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 16 Apr 2020 22:09:10 GMT
recorded_with: VCR 5.1.0
